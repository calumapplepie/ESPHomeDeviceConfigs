esphome:
  name: smartspeakeresp32
  friendly_name: SmartSpeakerESP32

substitutions:
  speaker_sample_rate: "48000"

esp32:
  board: arduino_nano_esp32
  framework:
    type: esp-idf
    version: recommended

external_components:
  - source: github://pr#8574
    components: [ adc_microphone ]
    refresh: 90min

# Enable logging
logger:
  level: VERY_VERBOSE
  logs:
    ledc.output: INFO


# Enable Home Assistant API
api:
  encryption:
    key: !secret smartspeaker_ha_key

button:
  - platform: template
    name: StartRecord
    id: mic_button
    on_press:
      then:
        - microphone.capture: mic_id
        - delay: 1s
        - microphone.stop_capture: mic_id

ota:
  - platform: esphome
    password: !secret smartspeaker_ota_key

wifi:
  networks: 
  - ssid: !secret wifi_ssid
    password: !secret wifi_password
    hidden: true
    bssid: 9C:EF:D5:F9:59:EA

  reboot_timeout: 3min # we seem to run into the 'issues requiring a full reboot' every time

  manual_ip:
    static_ip: 10.20.0.21
    gateway: 10.20.0.1
    subnet: 255.255.255.0

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Smartspeakeresp32"
    password: "pagVEo7Gwzda"

captive_portal:
    

# test board led
light:
  - platform: rgb
    name: "Living Room Lights"
    red: output_RED
    green: output_GREEN
    blue: output_BLUE

output:
  - platform: ledc
    pin: GPIO46
    id: output_RED
    inverted: true

  - platform: ledc
    pin: GPIO0
    id: output_GREEN
    inverted: true

  - platform: ledc
    pin: GPIO45
    id: output_BLUE
    inverted: true


# i2c output (its not actually i2c, but we can pretend)
# TODO: finish making`
i2s_audio:
  - id: i2s_output
    # i2s_output data pin is gpio10
    i2s_lrclk_pin:
      number: GPIO12
    i2s_bclk_pin:
      number: GPIO13

speaker:
  - platform: i2s_audio
    id: speaker_dac_out
    dac_type: external
    sample_rate: 48000
    i2s_mode: primary
    i2s_dout_pin: GPIO11
    i2s_comm_fmt: stand_msb
    channel: mono
    bits_per_sample: 16bit
    buffer_duration: 500ms
    # Virtual speakers to combine the announcement and media streams together into one output
  - platform: mixer
    id: mixing_speaker
    output_speaker: speaker_dac_out
    num_channels: 2
    source_speakers:
      - id: announcement_mixing_input
        timeout: never
      - id: media_mixing_input
        timeout: never

  # Vritual speakers to resample each pipelines' audio, if necessary, as the mixer speaker requires the same sample rate
  - platform: resampler
    id: announcement_resampling_speaker
    output_speaker: announcement_mixing_input
    sample_rate: $speaker_sample_rate
    bits_per_sample: 16
  - platform: resampler
    id: media_resampling_speaker
    output_speaker: media_mixing_input
    sample_rate: $speaker_sample_rate
    bits_per_sample: 16

media_player:
  - platform: speaker
    id: external_media_player
    name: Media Player
    internal: False
    volume_increment: 0.05
    volume_min: 0.4
    volume_max: 0.85
    announcement_pipeline:
      speaker: announcement_resampling_speaker
      format: FLAC     # FLAC is the least processor intensive codec
      num_channels: 1  # Stereo audio is unnecessary for announcements
      sample_rate: $speaker_sample_rate
    media_pipeline:
      speaker: media_resampling_speaker
      format: FLAC     # FLAC is the least processor intensive codec
      num_channels: 2
      sample_rate: $speaker_sample_rate

    on_announcement:
      - mixer_speaker.apply_ducking:
          id: media_mixing_input
          decibel_reduction: 20
          duration: 0.0s
    on_state:
      if:
        condition:
          and:
            #- switch.is_off: timer_ringing
            - not:
                voice_assistant.is_running:
            - not:
                media_player.is_announcing:
        then:
          - mixer_speaker.apply_ducking:
              id: media_mixing_input
              decibel_reduction: 0
              duration: 1.0s
    files:
      - id: mute_switch_on_sound
        file: https://github.com/esphome/home-assistant-voice-pe/raw/dev/sounds/mute_switch_on.flac
      - id: mute_switch_off_sound
        file: https://github.com/esphome/home-assistant-voice-pe/raw/dev/sounds/mute_switch_off.flac
      - id: timer_finished_sound
        file: https://github.com/esphome/home-assistant-voice-pe/raw/dev/sounds/timer_finished.flac
      - id: wake_word_triggered_sound
        file: https://github.com/esphome/home-assistant-voice-pe/raw/dev/sounds/wake_word_triggered.flac
      - id: easter_egg_tick_sound
        file: https://github.com/esphome/home-assistant-voice-pe/raw/dev/sounds/easter_egg_tick.mp3
      - id: easter_egg_tada_sound
        file: https://github.com/esphome/home-assistant-voice-pe/raw/dev/sounds/easter_egg_tada.mp3

microphone:
  - platform: adc_microphone
    id: mic_id
    adc_pin: GPIO2
    on_data:
      - logger.log:
          format: "Received %d bytes"
          args: ['x.size()']
      - sensor.template.publish:
          id: adc_average
          state: !lambda |-
            int size = x.size();
            double sum  = 0;
            for(auto i : x) {
              sum += i;
            }
            return sum / size;

sensor:
  id: adc_average
  name: "ADC Average Value"
  platform: template
  accuracy_decimals: 5
  expire_after: 2s

mqtt:
  broker: 10.20.0.1
  username: calumspeaker
  password: !secret mqtt_password_calumspeaker
  discovery: False
  log_topic: null


voice_assistant:
  id: va
  microphone: mic_id
  media_player: external_media_player
  use_wake_word: true
  noise_suppression_level: 0
  auto_gain: 0 dbfs
  volume_multiplier: 1

  on_client_disconnected:
    - voice_assistant.stop:
  
  # When the voice assistant starts: Play a wake up sound, duck audio.
  on_start:
    - mixer_speaker.apply_ducking:
        id: media_mixing_input
        decibel_reduction: 20  # Number of dB quieter; higher implies more quiet, 0 implies full volume
        duration: 0.0s         # The duration of the transition (default is no transition)
  
  # When the voice assistant ends ...
  on_end:
    - wait_until:
        not:
          voice_assistant.is_running:
    # Stop ducking audio.
    - mixer_speaker.apply_ducking:
        id: media_mixing_input
        decibel_reduction: 0
        duration: 1.0s
